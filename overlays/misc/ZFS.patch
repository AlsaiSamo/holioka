diff --git a/crates/atuin-client/src/database.rs b/crates/atuin-client/src/database.rs
index 06f0bbb..3e81afe 100644
--- a/crates/atuin-client/src/database.rs
+++ b/crates/atuin-client/src/database.rs
@@ -149,9 +149,9 @@ impl Sqlite {
         }
 
         let opts = SqliteConnectOptions::from_str(path.as_os_str().to_str().unwrap())?
-            .journal_mode(SqliteJournalMode::Wal)
+            .journal_mode(SqliteJournalMode::Memory)
             .optimize_on_close(true, None)
-            .synchronous(SqliteSynchronous::Normal)
+            .synchronous(SqliteSynchronous::Off)
             .with_regexp()
             .create_if_missing(true);
 
diff --git a/crates/atuin-client/src/record/sqlite_store.rs b/crates/atuin-client/src/record/sqlite_store.rs
index a3e7228..4e661ef 100644
--- a/crates/atuin-client/src/record/sqlite_store.rs
+++ b/crates/atuin-client/src/record/sqlite_store.rs
@@ -11,7 +11,7 @@ use fs_err as fs;
 
 use sqlx::{
     Row,
-    sqlite::{SqliteConnectOptions, SqliteJournalMode, SqlitePool, SqlitePoolOptions, SqliteRow},
+    sqlite::{SqliteConnectOptions, SqliteJournalMode, SqlitePool, SqlitePoolOptions, SqliteRow, SqliteSynchronous},
 };
 
 use atuin_common::record::{
@@ -48,7 +48,8 @@ impl SqliteStore {
         }
 
         let opts = SqliteConnectOptions::from_str(path.as_os_str().to_str().unwrap())?
-            .journal_mode(SqliteJournalMode::Wal)
+            .journal_mode(SqliteJournalMode::Memory)
+            .synchronous(SqliteSynchronous::Off)
             .foreign_keys(true)
             .create_if_missing(true);
 
